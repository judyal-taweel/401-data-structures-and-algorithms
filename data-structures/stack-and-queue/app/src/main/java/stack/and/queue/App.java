package stack.and.queue;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.util.Arrays;
import java.util.List;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

//        Stack stack=new Stack();
//        Queue queue=new Queue();
//        stack.push(4);
//        stack.push(5);
//        stack.push(6);
//        stack.push(7);
////        stack.pop();
//        stack.tostring();
//
//        queue.enQueue(4);
//        queue.enQueue(5);
//        queue.enQueue(6);
//        queue.enQueue(7);
//        System.out.println("front"+ queue.peek());
//        queue.tostring();


//        PseudoQueue sodo = new PseudoQueue();
//        sodo.enqueue(1);
//        sodo.enqueue(2);
//        sodo.enqueue(3);
////        sodo.dequeue();
//        sodo.tostring();

//        Animal animal = new Animal("cat");
//        Animal animal1 = new Animal("dog");
//        Animal animal2 = new Animal("monkey");
//        animal.enqueue(animal.getKind());
//        animal.enqueue(animal1.getKind());
//        animal.enqueue(animal2.getKind());
//        System.out.println( animal.deQueue("dog"));
//        animal.tostring();


//        ValidateBrackets brackets = new ValidateBrackets();
//        System.out.println(brackets.correctBrackets("{{"))


        System.out.println(duckDuckGoose(Arrays.asList("A", "B", "C", "D", "E"), 3));
    }

    public static String duckDuckGoose(List<String> strList, int removedIndex) {
        System.out.println("n = " + removedIndex);
        System.out.println(strList);
        int strCount = strList.size(); //number of element still in array
        int currentIndex = 0;
        while (strCount > 1) {
            for (int counter = 0; counter < removedIndex; counter++) {
                if ((strList.get(currentIndex).equals("_"))) {
                    counter--;
                }
                else if (!(strList.get(currentIndex).equals("_")) && ((counter == removedIndex - 1))) {
                    strList.set(currentIndex, "_");
                    strCount--;
                }
                currentIndex++;
                if (currentIndex == strList.size()) {
                    currentIndex = 0;
                }
            }
            System.out.println(strList);
        }
        for (String str : strList) {
            if (!str.equals("_")) {
                return "last element left in the list --> " + str;
            }
        }
        return "";
    }
}
